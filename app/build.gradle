plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.32'
    id 'application'
    id 'com.palantir.docker' version '0.25.0'
}

group 'com.exactpro.th2'
version release_version

sourceCompatibility = 11
targetCompatibility = 11

ext {
    coroutines_version = '1.5.2'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        jvmTarget = "11"
        freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}

dependencies {
    implementation platform('com.exactpro.th2:bom:3.2.0')

    implementation project(':grpc-read-db')

    implementation 'com.exactpro.th2:common:3.39.3'
    implementation 'org.slf4j:slf4j-api'

    implementation('org.apache.commons:commons-dbcp2:2.9.0') {
        because('connection pool')
    }
    implementation 'org.apache.commons:commons-text:1.9'
    implementation('com.opencsv:opencsv:5.6') {
        because('publishes raw messages in csv format')
    }

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation 'io.github.microutils:kotlin-logging:2.1.14'

    //region Drivers
    runtimeOnly('org.postgresql:postgresql:42.4.1') {
        because('prostresql support')
    }
    runtimeOnly('mysql:mysql-connector-java:8.0.30') {
        because('mysql support')
    }
    runtimeOnly('org.apache.hive:hive-jdbc:3.1.3') {
        because('impala support')
    }
    //endregion

    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "io.strikt:strikt-core:0.32.0"

    testImplementation platform('org.testcontainers:testcontainers-bom:1.17.3')
    testImplementation 'org.testcontainers:testcontainers'
    testImplementation 'org.testcontainers:mysql'
}

test {
    useJUnitPlatform {
        excludeTags('integration-test')
    }
}

tasks.register('integrationTest', Test) {
    group = 'verification'
    useJUnitPlatform {
        includeTags('integration-test')
    }
}

jar {
    manifest {
        attributes(
                'Created-By': "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                'Specification-Title': '',
                'Specification-Vendor': 'Exactpro Systems LLC',
                'Implementation-Title': project.archivesBaseName,
                'Implementation-Vendor': 'Exactpro Systems LLC',
                'Implementation-Vendor-Id': 'com.exactpro',
                'Implementation-Version': project.version
        )
    }
}

applicationName = 'service'

distTar {
    archiveFileName.set("${applicationName}.tar")
}

dockerPrepare {
    dependsOn distTar
}

docker {
    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

application {
    mainClass.set("com.exactpro.th2.read.db.bootstrap.Main")
}

tasks.withType(PublishToMavenRepository).configureEach {it.enabled = false}