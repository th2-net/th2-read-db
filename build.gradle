import com.github.jk1.license.filter.LicenseBundleNormalizer
import com.github.jk1.license.render.JsonReportRenderer

plugins {
    id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
    id 'org.jetbrains.kotlin.jvm' version '1.8.22' apply false
    id "org.owasp.dependencycheck" version "8.4.0"
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
    id "com.github.jk1.dependency-license-report" version "2.5"
    id "de.undercouch.download" version "5.5.0"
}

allprojects {
    group = 'com.exactpro.th2'
    version = release_version
    String suffix = property('version_suffix').toString()
    if (!suffix.isEmpty()) {
        version = "$version-$suffix"
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

tasks.withType(PublishToMavenRepository).configureEach { it.enabled = false }

dependencyCheck {
    skipProjects = [':app']
    formats = ['SARIF', 'JSON', 'HTML']
    failBuildOnCVSS = 5

    analyzers {
        assemblyEnabled = false
        nugetconfEnabled = false
        nodeEnabled = false
    }
}

dependencyLocking {
    lockAllConfigurations()
}

licenseReport {
    def licenseNormalizerBundlePath = "$buildDir/license-normalizer-bundle.json"

    if (!file(licenseNormalizerBundlePath).exists()) {
        download.run {
            src 'https://raw.githubusercontent.com/th2-net/.github/main/license-compliance/gradle-license-report/license-normalizer-bundle.json'
            dest "$buildDir/license-normalizer-bundle.json"
            overwrite false
        }
    }

    filters = [new LicenseBundleNormalizer(licenseNormalizerBundlePath, false)]
    renderers = [new JsonReportRenderer('licenses.json', false)]
    allowedLicensesFile = new URL("https://raw.githubusercontent.com/th2-net/.github/main/license-compliance/gradle-license-report/allowed-licenses.json")
}