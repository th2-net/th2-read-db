name: Build and publish read db project

on:
  push:
    branches:
      - master
      - version-*
    paths:
      - app/gradle.properties
      - grpc/gradle.properties

jobs:
  changes:
    name: Collect changed files
    runs-on: ubuntu-20.04
    outputs:
      app: ${{ steps.filter.outputs.app }}
      grpc: ${{ steps.filter.outputs.grpc }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            app:
              - 'app/gradle.properties'
            grpc:
              - 'grpc/gradle.properties'
  build-and-publish-java:
    name: Build and publish Java distributions
    needs:
      - changes
    runs-on: ubuntu-20.04
    if: ${{ needs.changes.outputs.grpc == 'true' }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Build with Gradle
        run: ./gradlew --info --warning-mode all clean :grpc-read-db:build :grpc-read-db:publish closeAndReleaseSonatypeStagingRepository
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SONATYPE_GPG_ARMORED_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SONATYPE_SIGNING_PASSWORD }}
  build-and-publish-python:
    name: Build and publish Python distributions to PyPI
    needs:
      - changes
    runs-on: ubuntu-20.04
    if: ${{ needs.changes.outputs.grpc == 'true' }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Build with Gradle
        run: ./gradlew clean :grpc-read-db:build
      - name: Build package
        working-directory: ./grpc
        run: |
          pip install -r requirements.txt
          python setup.py generate -s
          python setup.py sdist
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
          repository_url: https://upload.pypi.org/legacy/
  publish-docker:
    name: Build and publish docker image
    runs-on: ubuntu-20.04
    if: ${{ needs.changes.outputs.app == 'true' || needs.changes.outputs.grpc == 'true' }}
    needs:
      - build-and-publish-python
      - build-and-publish-java
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - run: echo "::set-output name=REPOSITORY_NAME::$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')"
        id: meta
      - name: Read version from gradle.properties
        id: read_property
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: .app/gradle.properties
          property: release_version
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.read_property.outputs.value }}
          labels: com.exactpro.th2.${{ steps.meta.outputs.REPOSITORY_NAME }}=${{ steps.read_property.outputs.value }}
          build-args: |
            release_version=${{ steps.read_property.outputs.value }}